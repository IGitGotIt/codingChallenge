typealias AlphaDictionary = [String : Int]

func getAlphaNullHistogram() -> AlphaDictionary {
    let alphabet: [String] = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]

    var alphaDictionary = [String: Int]()
    for a in alphabet {
        alphaDictionary[a] = 0
    }
    return alphaDictionary
}

func createHistogram( inDict d: inout AlphaDictionary , forString s: String) -> AlphaDictionary {
    for c in s {
        if let i = d[String(c)] {
            d[String(c)] = i + 1
        }
    }
    return d
}
var aLeftDict: AlphaDictionary = getAlphaNullHistogram()
createHistogram(inDict: &aLeftDict, forString: "aab")
var aRightDict: AlphaDictionary = getAlphaNullHistogram()
createHistogram(inDict: &aRightDict, forString: "aab")

func findNonRecurringAlikeCountPairs(_ l: AlphaDictionary, _ r: AlphaDictionary) -> Int {
    var i = 0
    for (index, _) in l {
        if let lVal = l[index], let rVal = r[index] {
            i += min(lVal, rVal)
        }
    }
    return i
}

print(findNonRecurringAlikeCountPairs(aLeftDict, aRightDict))
